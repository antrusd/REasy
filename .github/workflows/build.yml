name: Test, Build and Package REasy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (preferably starts with "v")'
        required: true
      skip_tests:               
        description: 'Skip RSZ functional tests'
        type: boolean
        default: false

  release:
    types: [published]

permissions:
  id-token: write     
  attestations: write   
  contents: write      

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      SKIP_TESTS: ${{ github.event.inputs.skip_tests }}

    strategy:
      fail-fast: false
      matrix:
        game: [re4, mhwilds, re2, re7,
               re3, re3rt, re2rt, re7rt,
               re8, mhr]

    steps:

    - name: ⏭️  Tests skipped by user
      if: ${{ env.SKIP_TESTS == 'true' }}
      run: echo "RSZ tests skipped via input; job marked as success."


    - uses: actions/checkout@v4
      if: ${{ env.SKIP_TESTS != 'true' }}

    - name: Checkout sample zips
      if: ${{ env.SKIP_TESTS != 'true' }}
      uses: actions/checkout@v4
      with:
        repository: seifhassine/RSZ-File-Samples
        token: ${{ secrets.SAMPLES_TOKEN }}
        path: samples


    - name: Extract zips for ${{ matrix.game }}
      if: ${{ env.SKIP_TESTS != 'true' }}
      shell: bash
      env:
        GAME:     ${{ matrix.game }}
        ZIP_DIR:  ${{ github.workspace }}/samples
        DEST_DIR: ${{ github.workspace }}/tests
      run: |
        set -euo pipefail
        mkdir -p "$DEST_DIR/$GAME"

        shopt -s nullglob
        for z in "$ZIP_DIR/${GAME}.zip" "$ZIP_DIR/${GAME}-"*.zip; do
          [[ -f $z ]] || continue

          echo "⤵️  extracting $(basename "$z") → $DEST_DIR/$GAME"
          tmpdir=$(mktemp -d)
          unzip -oq "$z" -d "$tmpdir"

          roots=("$tmpdir"/*)
          if [[ ${#roots[@]} -eq 1 && -d "${roots[0]}" && -z "$(find "$tmpdir" -mindepth 1 -maxdepth 1 -type f)" ]]; then
            src="${roots[0]}"
          else
            src="$tmpdir"
          fi

          rsync -a "$src"/ "$DEST_DIR/$GAME"/
          rm -rf "$tmpdir"
        done

        echo "📂  Final layout for $GAME:"
        tree -L 2 "$DEST_DIR/$GAME" || true

    - uses: actions/setup-python@v5
      if: ${{ env.SKIP_TESTS != 'true' }}
      with:
        python-version: '3.13'

    - name: Install deps
      if: ${{ env.SKIP_TESTS != 'true' }}
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


    - name: Run RSZ tests for ${{ matrix.game }}
      if: ${{ env.SKIP_TESTS != 'true' }}
      env:
        TEST_GAME: ${{ matrix.game }}
      run: python -m unittest -v tests.test_scn_parser


    - name: Dump failure logs
      if: ${{ failure() && env.SKIP_TESTS != 'true' }}
      shell: bash
      env:
        GAME: ${{ matrix.game }}
      run: |
        echo "===== Failure logs for $GAME ====="
        shopt -s nullglob
        for f in tests/logs/$GAME/*.log; do
          echo "::group::${f}"
          cat "$f"
          echo "::endgroup::"
        done

    - name: Upload test logs
      if: ${{ always() && env.SKIP_TESTS != 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: rsz-test-logs-${{ matrix.game }}
        path: tests/logs/${{ matrix.game }}/*.log
        retention-days: 14
        if-no-files-found: warn


  build-windows:
    needs: tests                 
    runs-on: windows-latest
    environment: REasy ENV

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Update Firebase config with secrets
      shell: pwsh
      run: |
        $filePath = "firebase/config/firebase_config.py"
        $content = Get-Content -Path $filePath -Raw
        $content = $content -replace '"apiKey":\s+"change-me"', '"apiKey": "${{ secrets.FIREBASE_API_KEY }}"'
        $content = $content -replace '"appId":\s+"change-me"', '"appId": "${{ secrets.FIREBASE_APP_ID }}"'
        Set-Content -Path $filePath -Value $content
    
    - name: Run build.bat
      shell: cmd
      run: build.bat
      env:
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

    - name: Attest Build Provenance
      uses: actions/attest-build-provenance@v2.4.0
      with:
        subject-path: dist/REasy_x64.exe

    - name: Determine version
      id: get_version
      run: |
        if ($env:GITHUB_EVENT_NAME -eq "release") {
          $version = "${{ github.event.release.tag_name }}"
        } else {
          $input_version = "${{ github.event.inputs.version }}"
          if ($input_version -like "v*") {
            $version = $input_version
          } else {
            $version = "v$input_version"
          }
        }
        echo "version=$version" >> $env:GITHUB_ENV

    - name: Create ZIP archive
      run: |
        Compress-Archive -Path .\dist\* -DestinationPath "REasy $env:version.zip"

    - name: Upload ZIP to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: "REasy ${{ env.version }}"
        tag_name: "${{ env.version }}"
        files: "REasy ${{ env.version }}.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload ZIP artifact
      uses: actions/upload-artifact@v4
      with:
        name: reasy-${{ env.version }}
        path: "REasy ${{ env.version }}.zip"
